# SPDX-FileCopyrightText: Copyright Â© DUNE Project contributors, see file LICENSE.md in module root
# SPDX-License-Identifier: LicenseRef-GPL-2.0-only-with-DUNE-exception

[sequential]
N = 20

[sequential.CGWithRichardson]
type = cgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = richardson
preconditioner.iterations = 1
preconditioner.relaxation = 1


[sequential.CGWithSSOR]
type = cgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.CGWithJac]
type = cgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = jac
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.CGWithILDL]
type = cgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ildl
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.CGWithAMG]
type = cgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = amg
preconditioner.iterations = 1
preconditioner.relaxation = 1
preconditioner.maxLevel = 10
preconditioner.strengthMeasure = rowSum

[sequential.BiCGStabWithILU]
type = bicgstabsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ilu
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.LoopSolverWithSSOR]
type = loopsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.GradientSolverWithSSOR]
type = gradientsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.MINRESSolverWithSSOR]
type = minressolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.GMRESWithSSOR]
type = restartedgmressolver
verbosity = 1
maxit = 1000
reduction = 1e-5
restart = 10
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.RestartedFlexibleGMRESWithSSOR]
type = restartedflexiblegmressolver
verbosity = 1
maxit = 1000
reduction = 1e-5
restart = 10
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.GeneralizedPCGWithSSOR]
type = generalizedpcgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
restart = 10
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.RestartedFCGWithSSOR]
type = restartedfcgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.CompleteFCGWithSSOR]
type = completefcgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.BiCGStabWithSOR]
type = bicgstabsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = sor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[sequential.UMFPack]
type = umfpack
verbosity = 1

[sequential.SuperLU]
type = superlu
verbosity = 1

[sequential.Cholmod]
type = cholmod

[sequential.LDL]
type = ldl
verbosity = 1

[sequential.SPQR]
type = spqr
verbosity = 1

[overlapping]
N = 20

[overlapping.CGWithRichardson]
type = cgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = richardson
preconditioner.iterations = 1
preconditioner.relaxation = 1


[overlapping.CGWithSSOR]
type = cgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[overlapping.CGWithJac]
type = cgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = jac
preconditioner.iterations = 1
preconditioner.relaxation = 1

[overlapping.CGWithILDL]
type = cgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ildl
preconditioner.iterations = 1
preconditioner.relaxation = 1

[overlapping.CGWithAMG]
type = cgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = amg
preconditioner.iterations = 1
preconditioner.relaxation = 1
preconditioner.maxLevel = 10
preconditioner.strengthMeasure = rowSum

[overlapping.BiCGStagWithILU]
type = bicgstabsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ilu
preconditioner.iterations = 1
preconditioner.relaxation = 1

[overlapping.LoopSolverWithSSOR]
type = loopsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[overlapping.GradientSolverWithSSOR]
type = gradientsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[overlapping.MINRESSolverWithSSOR]
type = minressolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[overlapping.GMRESWithSSOR]
type = restartedgmressolver
verbosity = 1
maxit = 1000
reduction = 1e-5
restart = 10
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[overlapping.RestartedFlexibleGMRESWithSSOR]
type = restartedflexiblegmressolver
verbosity = 1
maxit = 1000
reduction = 1e-5
restart = 10
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[overlapping.GeneralizedPCGWithSSOR]
type = generalizedpcgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
restart = 10
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[overlapping.RestartedFCGWithSSOR]
type = restartedfcgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[overlapping.CompleteFCGWithSSOR]
type = completefcgsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = ssor
preconditioner.iterations = 1
preconditioner.relaxation = 1

[overlapping.BiCGStabWithSOR]
type = bicgstabsolver
verbosity = 1
maxit = 1000
reduction = 1e-5
preconditioner.type = sor
preconditioner.iterations = 1
preconditioner.relaxation = 1
